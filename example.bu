# Bu example

# Defines a variable that is pushed into the environment of targets.
my_var =42

# Simple target that prints a variable.
my_basic:
  echo $my_var

# Simple target that depends on another target.
my_dep: my_basic
  echo I depend on my_target

# A target that will fail
my_fail:
  false

# depends on the file '/tmp/banana' existing
# and a target that creates that file
file_dep: redirect ?/tmp/banana
  echo does this work?

# depends on a 200 from http://www.wikipedia.org/
web_dep: @www.wikipedia.org
  echo yes wikipedia is alive

# waits until it gets a 200 response from http://localhost:8080/
wait_serve: serve @'localhost:8080'
  echo server is up
  killall twistd

# starts a local web server
serve:
  twistd web

# redirects output to '/tmp/banana'
redirect: >/tmp/banana
  echo how about this?

site: !py >index.html
  print "<h1>Hello world</h1>"

# index.html is passed into the target's stdin, useful when not using bash and
# shells with annoyingly difficult redirection.
read: <index.html
  cat

# empty targets do nothing, successfully.
empty:

some_py: !py <example.bu >/tmp/outputfile.txt
  import sys
  print sys.stdin.read()

# names can be quoted to include spaces and other operators
# bu 'this is quoted!!'
'this is quoted!!':
  echo what??

# counts characters from stdin
count:
  wc -c

# converts decimals to hex
hex:
  wcalc -h

# pipes its output to the count, then hex targets
pipe: | count | hex
  echo piped
  echo banana
